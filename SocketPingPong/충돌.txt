<충돌체크>

-씬 내부 모든 콜라이더 매프레임 체크
-기본오브젝트(유니티의 빈오브젝트)에 컴포넌트로 추가.-> 기본오브젝트를 가리키는 포인터로 위치정보받아옴
-씬 내부 오브젝트들을 모두 돌면서 collider가 있으면 collider 정보 업데이트
- 튕기지 않음 rigidbody미구현, 생성시 겹쳐진 오브젝트들도 서로 밀어내지 않음
boxCollider로 일단 구현


===========================================
충돌원리:
(검사를 하려는 두 collider 비교하기) -> 모든 collider가 비교 -> n*n/2 O(n2)연산
-collider는 선으로 구성.일단  box, circle 콜라이더만 고려
1. circle-circle 은 단순히[ 중심간 거리<=두 반지름의 합] 이면 충돌.
2.box-box간은 조건을 단순화한 비교
2-1(축에 평행항 사각형일경우) =>AABB 알고리즘
//
overlapRectangles(Rectangle r1, Rectangle r2) {
    if(r1.lowerLeft.x < r2.lowerLeft.x + r2.width &&
       r1.lowerLeft.x + r1.width > r2.lowerLeft.x &&
       r1.lowerLeft.y < r2.lowerLeft.y + r2.height &&
       r1.lowerLeft.y + r1.height > r2.lowerLeft.y)
        return true;
    else
        return false;
}
//
2-2 축에 평행하지 않을경우 => obb (분리축이론)
각 변에 평행한 축에 사각형들을 투영시켰을때 한번이라도 투영된 선이 겹치지 않으면 두 사각형 겹치지 않음.
투영선이 겹치지 않는다=> 내적으로 크기만 비교. 
=>각 변에 평행한 축 L 에 대해 
-각 사각형의 중심을 연결한 벡터v라하면 v.L 
-사각형 A,B 중심에서 한 점까지의 벡터 a,b  (크기비교가 목적이므로 사각형의 어느점을 잡아도 상관없다. 어떤 점이든 내적값은 같다. 중심점 하나를 미리  잡아 연산을 줄이자)
- v.L > a.L+b.L 일 경우 투영선이 겹치지 않음. 즉 두 사각형이 겹치지 않음
두 사각형에 대해 4번의 축을 계산 (각 사각형은 평행한 축이 두쌍씩 있으므로)


collider도 vertex 기준의 도형이다. 도형간 충돌은 한 vertex가 다른 도형의 내부에 있으면 충돌이다. (원의 경우도 점의 집합이므로 표면의 모든 부분이 vertex라 가정)
한 vertex가 다른 도형내부에있는지는 어케아나?

